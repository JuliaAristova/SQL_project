--error handling

ALTER PROCEDURE getCustomerSummary @Country NVARCHAR(50) = 'USA'
AS 
BEGIN 
	BEGIN TRY
		DECLARE @numCustomers INT, @avgScore FLOAT; 
		
		--***********************************		
		--Step 1: Prepare and CLeanup Data
		--***********************************		
		IF EXISTS (SELECT 1 FROM Sales.Customers WHERE Score IS NULL AND Country = @Country)
			BEGIN
			PRINT ('Updating NULL score to 0')
				UPDATE Sales.Customers
				SET Score = 0
				WHERE Score IS NULL AND Country = @Country;
			END
		ELSE
			BEGIN
				PRINT ('No NULLs are found')
			END;

		--***********************************
		--Step 2: Generating Summary Report
		--***********************************
		--Calculate Total Customers and Average Score for a specific country
			SELECT 
				@numCustomers = count(*), 
				@avgScore = AVG(Score)
		FROM Sales.Customers
		WHERE Country = @Country;

		PRINT 'Total Customers from ' + @Country + ': ' + CAST(@numCustomers AS NVARCHAR);
		PRINT 'Average Score from ' + @Country + ': ' + CAST(@avgScore AS NVARCHAR);

		--Calculate Total number of Orders and Total Sales for a specific country
		SELECT 
			COUNT(OrderID) AS numOrders, 
			SUM(Sales) AS totalSales,
			--1/0
		FROM Sales.Orders o
		JOIN Sales.Customers c ON c.CustomerID = o.CustomerID
		WHERE c.Country = @Country
	END TRY
	--Error handling
	BEGIN CATCH
		PRINT ('An error occured');
		PRINT ('Error Message: ' + ERROR_MESSAGE());
		PRINT('Error Number: ' + CAST(ERROR_NUMBER() AS NVARCHAR));
		PRINT('Error Line: ' + CAST(ERROR_LINE() AS NVARCHAR));
		PRINT('Error Procedure: ' + ERROR_PROCEDURE());
	END CATCH
END
EXEC getCustomerSummary @Country = 'Germany'
EXEC getCustomerSummary
