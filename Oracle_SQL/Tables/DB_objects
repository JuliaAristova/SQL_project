DB consisits of one or more DB objects.

Schema is a logical collection of certain DB objects, such as tables indexes, and views, 
all of each are owned by a user account. (Schema = user account)

***** Categories of DB objects *****

1. Schema objects - owned bt a user account
       - tables
       - constraints
       - indexes
       - views
       - sequencies
       - private synonyms - owned by a uset account
2. Non-schema objects - cannot be owned by a user account
       - users - user account cannot be owned by itself or another account. It is a property of DB as a whole.
       - roles - one or more priviligies that can be granted to one or more USER objects.
       - public synonyms - available to the whole DB

Subject of the exam:

TABLE  - structure that can store data. All data stored in columns and rows.Each column datarype is explicitly defined.
INDEX - object designed to support faster search in a table.
VIEW - a 'filter' through which you can search a table and interact with a table but that stores no data inseld and simply 
       serves as a 'window' onto ine or more tables. It can mask a portion of the underlying table(s).
SEQUENCE - a counter, often used to generate unique numbers as identifiers for new rows as they are added to a table.
SYNONYM - al alias for another object in the DB, often used to specify ab alternative name for a table or view
CONSTRAINT - a small bit of logic defined by you to instruct a particular table about how it will accept.
            modify. or reject incoming data.
USERS - the 'owner' of DB objects.
ROLES - a set of one or more priviligies that can be granted to a user.

***** CREATE OBJECT *****

CREATE objectType objectName attributes;

Note: you cannot create a CONSTRAINT in this way
Create PRIVATE SYNONYM or Create SYNONIM (for public)

attributes - 0+ series of clauses that are unique for each individual objectTYpe.

***** Namespaces *****

A namespace is a logical boundary within the DB that encompasses a particular set of DB objects. 
THere are several namespaces at work at any given time.
You must provide unique names for an object within its own namespace.
Ex., you can create Work_Schedule table in bothe schemas, but you cannot create table and view with the same name in the same
schema, but you can create a constraint with the same name,
DB - Schema 1 - Namespace (Constraints)
                Namespace (Indexes)
                Namespace (Tables, Views, Sequences, Private Synonyms, User-Defined Types)
                Namespace (Users, Roles)
   - Schema 2 - Namespace (Constraints)
                Namespace (Indexes)
                Namespace (Tables, Views, Sequences, Private Synonyms, User-Defined Types)
                Namespace (Public Synonymes)
